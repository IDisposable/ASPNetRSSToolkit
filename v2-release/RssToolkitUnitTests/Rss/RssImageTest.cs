// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using RssToolkit.Rss;
namespace RssToolkitUnitTest
{
    /// <summary>
    ///This is a test class for RssToolkit.Rss.RssImage and is intended
    ///to contain all RssToolkit.Rss.RssImage Unit Tests
    ///</summary>
    [TestClass()]
    public class RssImageTest
    {
        private TestContext testContextInstance;
        private static RssDocument rss;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        [ClassInitialize()]
        public static void MyClassInitialize(TestContext testContext)
        {
            rss = RssToolkitUnitTest.Utility.RssUtility.GetRssDocumentFromXml();
        }
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion

        /// <summary>
        ///A test for Description
        ///</summary>
        [TestMethod()]
        public void RssImageDescriptionTest()
        {
            Assert.AreEqual("Yahoo News on the hour.", rss.Channel.Image.Description, "RssToolkit.Rss.RssImage.Description was not set correctly.");
        }

        /// <summary>
        ///A test for Height
        ///</summary>
        [TestMethod()]
        public void RssImageHeightTest()
        {
            Assert.AreEqual("18", rss.Channel.Image.Height, "RssToolkit.Rss.RssImage.Height was not set correctly.");
        }

        /// <summary>
        ///A test for Link
        ///</summary>
        [TestMethod()]
        public void RssImageLinkTest()
        {
            Assert.AreEqual("http://news.yahoo.com/i/716", rss.Channel.Image.Link, "RssToolkit.Rss.RssImage.Link was not set correctly.");
        }

        /// <summary>
        ///A test for Title
        ///</summary>
        [TestMethod()]
        public void RssImageTitleTest()
        {
            Assert.AreEqual("Yahoo! News", rss.Channel.Image.Title, "RssToolkit.Rss.RssImage.Title was not set correctly.");
        }

        /// <summary>
        ///A test for Url
        ///</summary>
        [TestMethod()]
        public void RssImageUrlTest()
        {
            Assert.AreEqual("http://us.i1.yimg.com/us.yimg.com/i/us/nws/th/main_142b.gif", rss.Channel.Image.Url, "RssToolkit.Rss.RssImage.Url was not set correctly.");
        }

        /// <summary>
        ///A test for Width
        ///</summary>
        [TestMethod()]
        public void RssImageWidthTest()
        {
            Assert.AreEqual("142", rss.Channel.Image.Width, "RssToolkit.Rss.RssImage.Width was not set correctly.");
        }
    }
}
