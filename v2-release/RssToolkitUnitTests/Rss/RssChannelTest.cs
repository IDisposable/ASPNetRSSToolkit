// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using RssToolkit.Rss;
namespace RssToolkitUnitTest
{
    /// <summary>
    ///This is a test class for RssToolkit.Rss.RssChannel and is intended
    ///to contain all RssToolkit.Rss.RssChannel Unit Tests
    ///</summary>
    [TestClass()]
    public class RssChannelTest
    {
        private TestContext testContextInstance;
        private static RssDocument rss;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        [ClassInitialize()]
        public static void MyClassInitialize(TestContext testContext)
        {
            rss = RssToolkitUnitTest.Utility.RssUtility.GetRssDocumentFromXml();
        }

        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Categories
        ///</summary>
        [TestMethod()]
        public void RssChannelCategoriesTest()
        {
            Assert.AreEqual(rss.Channel.Categories[0].Domain, "http://www.microsoft.com");
            Assert.AreEqual(rss.Channel.Categories[1].Domain, "http://www.yahoo.com");
            Assert.AreEqual(rss.Channel.Categories[0].Text, "MSFT");
            Assert.AreEqual(rss.Channel.Categories[1].Text, "YHOO");
        }

        /// <summary>
        ///A test for Cloud
        ///</summary>
        [TestMethod()]
        public void RssChannelCloudTest()
        {
            Assert.AreEqual(rss.Channel.Cloud.Domain, "rpc.sys.com");
            Assert.AreEqual(rss.Channel.Cloud.Path, "/RPC2");
            Assert.AreEqual(rss.Channel.Cloud.Port, "80");
            Assert.AreEqual(rss.Channel.Cloud.Protocol, "soap");
            Assert.AreEqual(rss.Channel.Cloud.RegisterProcedure, "pingMe");
        }

        /// <summary>
        ///A test for Copyright
        ///</summary>
        [TestMethod()]
        public void RssChannelCopyrightTest()
        {
            Assert.AreEqual("Copyright (c) 2007 Yahoo! Inc. All rights reserved.", rss.Channel.Copyright);
        }

        /// <summary>
        ///A test for Description
        ///</summary>
        [TestMethod()]
        public void RssChannelDescriptionTest()
        {
            Assert.AreEqual("Top Stories", rss.Channel.Description);
        }

        /// <summary>
        ///A test for Docs
        ///</summary>
        [TestMethod()]
        public void RssChannelDocsTest()
        {
            Assert.AreEqual("http://blogs.law.harvard.edu/tech/rss", rss.Channel.Docs);

        }

        /// <summary>
        ///A test for Generator
        ///</summary>
        [TestMethod()]
        public void RssChannelGeneratorTest()
        {
            Assert.AreEqual("MightyInHouse Content System v2.3", rss.Channel.Generator);
        }

        /// <summary>
        ///A test for Image
        ///</summary>
        [TestMethod()]
        public void RssChannelImageTest()
        {
            Assert.AreEqual("Yahoo News on the hour.", rss.Channel.Image.Description, "RssToolkit.Rss.RssImage.Description was not set correctly.");
            Assert.AreEqual("18", rss.Channel.Image.Height, "RssToolkit.Rss.RssImage.Height was not set correctly.");
            Assert.AreEqual("http://news.yahoo.com/i/716", rss.Channel.Image.Link, "RssToolkit.Rss.RssImage.Link was not set correctly.");
            Assert.AreEqual("Yahoo! News", rss.Channel.Image.Title, "RssToolkit.Rss.RssImage.Title was not set correctly.");
            Assert.AreEqual("http://us.i1.yimg.com/us.yimg.com/i/us/nws/th/main_142b.gif", rss.Channel.Image.Url, "RssToolkit.Rss.RssImage.Url was not set correctly.");
            Assert.AreEqual("142", rss.Channel.Image.Width, "RssToolkit.Rss.RssImage.Width was not set correctly.");
        }

        /// <summary>
        ///A test for Items
        ///</summary>
        [TestMethod()]
        public void RssChannelItemsTest()
        {
            Assert.AreEqual("someone@email.com", rss.Channel.Items[0].Author, "RssToolkit.Rss.RssItem.Author was not set correctly.");
            Assert.AreEqual(rss.Channel.Items[0].Categories[0].Domain, "http://www.google.com");
            Assert.AreEqual(rss.Channel.Items[0].Categories[1].Domain, "http://www.sun.com");
            Assert.AreEqual(rss.Channel.Items[0].Categories[0].Text, "GOOG");
            Assert.AreEqual(rss.Channel.Items[0].Categories[1].Text, "SUNW");
            Assert.AreEqual("This feed is from Yahoo News", rss.Channel.Items[0].Comments, "RssToolkit.Rss.RssItem.Comments was not set correctly.");
            Assert.AreEqual("This is a feed description", rss.Channel.Items[0].Description, "RssToolkit.Rss.RssItem.Description was not set correctly.");
            Assert.AreEqual("12216320", rss.Channel.Items[0].Enclosure.Length, "RssToolkit.Rss.RssEnclosure.Length was not set correctly.");
            Assert.AreEqual("audio/mpeg", rss.Channel.Items[0].Enclosure.Type, "RssToolkit.Rss.RssEnclosure.Type was not set correctly.");
            Assert.AreEqual("http://www.scripting.com/mp3s/weatherReportSuite.mp3", rss.Channel.Items[0].Enclosure.Url, "RssToolkit.Rss.RssEnclosure.Url was not set correctly.");
            Assert.AreEqual("false", rss.Channel.Items[0].Guid.IsPermaLink, "RssToolkit.Rss.RssGuid.IsPermaLink was not set correctly.");
            Assert.AreEqual("ap/20070214/bush", rss.Channel.Items[0].Guid.Text, "RssToolkit.Rss.RssGuid.Text was not set correctly.");
            Assert.AreEqual("http://us.rd.yahoo.com/dailynews/rss/topstories/*http://news.yahoo.com/s/ap/20070214/ap_on_go_pr_wh/bush", rss.Channel.Items[0].Link, "RssToolkit.Rss.RssItem.Link was not set correctly.");
            Assert.AreEqual("Wed, 14 Feb 2007 23:05:49 GMT", rss.Channel.Items[0].PubDate, "RssToolkit.Rss.RssItem.PubDate was not set correctly.");
            Assert.AreEqual("Bush: Iran is source of deadly weapons", rss.Channel.Items[0].Title, "RssToolkit.Rss.RssItem.Title was not set correctly.");
        }

        /// <summary>
        ///A test for LastBuildDate
        ///</summary>
        [TestMethod()]
        public void RssChannelLastBuildDateTest()
        {
            Assert.AreEqual("Wed, 14 Feb 2007 23:10:27 GMT", rss.Channel.LastBuildDate);
        }

        /// <summary>
        ///A test for Link
        ///</summary>
        [TestMethod()]
        public void RssChannelLinkTest()
        {
            Assert.AreEqual("http://news.yahoo.com/i/716", rss.Channel.Link);
        }

        /// <summary>
        ///A test for ManagingEditor
        ///</summary>
        [TestMethod()]
        public void RssChannelManagingEditorTest()
        {
            Assert.AreEqual("other@email.com", rss.Channel.ManagingEditor);
        }

        /// <summary>
        ///A test for PubDate
        ///</summary>
        [TestMethod()]
        public void RssChannelPubDateTest()
        {
            Assert.AreEqual("Wed, 14 Feb 2007 23:05:49 GMT", rss.Channel.PubDate);
        }

        /// <summary>
        ///A test for Rating
        ///</summary>
        [TestMethod()]
        public void RssChannelRatingTest()
        {
            Assert.AreEqual("10", rss.Channel.Rating);
        }

        /// <summary>
        ///A test for SkipDays
        ///</summary>
        [TestMethod()]
        public void RssChannelSkipDaysTest()
        {
            Assert.AreEqual("Tuesday", rss.Channel.SkipDays.Days[0], "RssToolkit.Rss.RssSkipHours.Hours was not set correctly.");
            Assert.AreEqual("Friday", rss.Channel.SkipDays.Days[1], "RssToolkit.Rss.RssSkipHours.Hours was not set correctly.");
        }

        /// <summary>
        ///A test for SkipHours
        ///</summary>
        [TestMethod()]
        public void RssChannelSkipHoursTest()
        {
            Assert.AreEqual("0", rss.Channel.SkipHours.Hours[0], "RssToolkit.Rss.RssSkipHours.Hours was not set correctly.");
            Assert.AreEqual("1", rss.Channel.SkipHours.Hours[1], "RssToolkit.Rss.RssSkipHours.Hours was not set correctly.");
        }

        /// <summary>
        ///A test for TimeToLive
        ///</summary>
        [TestMethod()]
        public void RssChannelTimeToLiveTest()
        {
            Assert.AreEqual("5", rss.Channel.TimeToLive);
        }

        /// <summary>
        ///A test for Title
        ///</summary>
        [TestMethod()]
        public void RssChannelTitleTest()
        {
            Assert.AreEqual("Yahoo! News: Top Stories", rss.Channel.Title);
        }

        /// <summary>
        ///A test for WebMaster
        ///</summary>
        [TestMethod()]
        public void RssChannelWebMasterTest()
        {
            Assert.AreEqual("other2@email.com", rss.Channel.WebMaster);
        }

        /// <summary>
        ///A test for Language
        ///</summary>
        [TestMethod()]
        public void RssChannelLanguageTest()
        {
            Assert.AreEqual("en-us", rss.Channel.Language);
        }

        /// <summary>
        ///A test for Text Input
        ///</summary>
        [TestMethod()]
        public void RssChannelTextInputTest()
        {
            Assert.AreEqual("Explains the text input area.", rss.Channel.TextInput.Description, "RssToolkit.Rss.RssTextInput.Description was not set correctly.");
            Assert.AreEqual("The URL of the CGI script that processes text input requests.", rss.Channel.TextInput.Link, "RssToolkit.Rss.RssTextInput.Description was not set correctly.");
            Assert.AreEqual("The name of the text object in the text input area.", rss.Channel.TextInput.Name, "RssToolkit.Rss.RssTextInput.Description was not set correctly.");
            Assert.AreEqual("The label of the Submit button in the text input area.", rss.Channel.TextInput.Title, "RssToolkit.Rss.RssTextInput.Description was not set correctly.");
        }
    }
}
