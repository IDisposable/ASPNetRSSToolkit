// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using RssToolkit.Rss;
using RssToolkit.Opml;
namespace RssToolkitUnitTest
{
    /// <summary>
    ///This is a test class for RssToolkit.Rss.RssAggregator and is intended
    ///to contain all RssToolkit.Rss.RssAggregator Unit Tests
    ///</summary>
    [TestClass()]
    public class RssAggregatorTest
    {
        private TestContext testContextInstance;
        private bool isError;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Load (OpmlDocument)
        ///</summary>
        [DeploymentItem("RssToolkit.dll")]
        [TestMethod()]
        public void RssAggregatorLoadTest()
        {
            RssAggregator target = new RssAggregator();

            RssToolkitUnitTest.RssToolkit_Rss_RssAggregatorAccessor accessor = new RssToolkitUnitTest.RssToolkit_Rss_RssAggregatorAccessor(target);

            OpmlDocument opmlDocument = RssToolkitUnitTest.Utility.RssUtility.GetOpmlDocumentFromXml();

            accessor.Load(opmlDocument);
            RssDocument rss = RssDocument.Load(target.RssXml);
            Assert.IsTrue(rss.Channel.Items.Count > 0);
        }

        /// <summary>
        ///A test for LoadFromUrl (string)
        ///</summary>
        [TestMethod()]
        public void RssAggregatorLoadFromUrlTest()
        {
            RssAggregator target = new RssAggregator();
            string opmlUrl = RssToolkitUnitTest.Utility.RssUtility.OpmlUrl;
            target.Load(new System.Uri(opmlUrl));
            RssDocument rss = RssDocument.Load(target.RssXml);
            Assert.IsTrue(rss.Channel.Items.Count > 0);
        }

        /// <summary>
        ///A test for LoadFromXml (string)
        ///</summary>
        [TestMethod()]
        public void RssAggregatorLoadFromXmlTest()
        {
            RssAggregator target = new RssAggregator();
            string xml = RssToolkitUnitTest.Utility.RssUtility.OpmlXml;
            target.Load(xml);
            RssDocument rss = RssDocument.Load(target.RssXml);
            Assert.IsTrue(rss.Channel.Items.Count > 0);
        }


        /// <summary>
        ///A test for NotifySubscribers (Exception, string, RssSeverityType)
        ///</summary>
        [DeploymentItem("RssToolkit.dll")]
        [TestMethod()]
        public void RssAggregatorNotifySubscribersTest()
        {
            RssAggregator target = new RssAggregator();

            RssToolkitUnitTest.RssToolkit_Rss_RssAggregatorAccessor accessor = new RssToolkitUnitTest.RssToolkit_Rss_RssAggregatorAccessor(target);
            target.RssAggregationEvent +=new EventHandler<RssAggregationEventArgs>(target_RssAggregationEvent);
            string invalidOpmlXml = @"<?xml version='1.0' encoding='ISO-8859-1'?>
                                    <opml version='1.1'>
	                                    <head>
		                                    <title>mySubscriptions.opml</title>
		                                    <dateCreated>Sat, 18 Jun 2005 12:11:52 GMT</dateCreated>
		                                    <dateModified>Tue, 02 Aug 2005 21:42:48 GMT</dateModified>
		                                    <ownerName>Some One</ownerName>
		                                    <ownerEmail>someone@email.com</ownerEmail>
		                                    <expansionState></expansionState>
		                                    <vertScrollState>1</vertScrollState>
		                                    <windowTop>61</windowTop>
		                                    <windowLeft>304</windowLeft>
		                                    <windowBottom>562</windowBottom>
		                                    <windowRight>842</windowRight>
                                            <link>http://www.microsoft.com</link>
		                                    </head>
	                                    <body>
		                                    <outline text='BBC News | News Front Page | UK Edition' description='Updated every minute of every day - FOR PERSONAL USE ONLY' htmlUrl='http://news.bbc.co.uk/go/click/rss/0.91/public/-/1/hi/default.stm' language='unknown' title='BBC News | News Front Page | UK Edition' type='rss' version='RSS' xmlUrl='http://www.microsoft.com'/>
                                        </body>
                                    </opml>";
            isError = false;
            target.Load(invalidOpmlXml);
            Assert.IsTrue(isError);
            isError = false;
            target.Load(RssToolkitUnitTest.Utility.RssUtility.OpmlXml);
            Assert.IsFalse(isError);
        }

        private void target_RssAggregationEvent(object sender, RssAggregationEventArgs eventArgs)
        {
            Exception ex = eventArgs.Exception;
            string message = eventArgs.Message;
            RssSeverityType severityType = eventArgs.SeverityType;

            Assert.IsTrue(ex != null);
            Assert.IsTrue(ex.Message.Length > 0);
            Assert.IsTrue(severityType == RssSeverityType.Error);
            isError = true;
        }
    }
}
