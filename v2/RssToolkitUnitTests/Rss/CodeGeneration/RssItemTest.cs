// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using RssToolkit.Rss;
namespace RssToolkitUnitTest
{
    /// <summary>
    ///This is a test class for RssToolkit.Rss.RssItem and is intended
    ///to contain all RssToolkit.Rss.RssItem Unit Tests
    ///</summary>
    [TestClass()]
    public class RssItemTest
    {
        private TestContext testContextInstance;
        private static RssDocument rss;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        [ClassInitialize()]
        public static void MyClassInitialize(TestContext testContext)
        {
            rss = RssToolkitUnitTest.Utility.RssUtility.GetRssDocumentFromXml();
        }
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        ///A test for Author
        ///</summary>
        [TestMethod()]
        public void RssItemAuthorTest()
        {
            Assert.AreEqual("someone@email.com", rss.Channel.Items[0].Author, "RssToolkit.Rss.RssItem.Author was not set correctly.");
        }

        /// <summary>
        ///A test for Categories
        ///</summary>
        [TestMethod()]
        public void RssItemCategoriesTest()
        {
            Assert.AreEqual(rss.Channel.Items[0].Categories[0].Domain, "http://www.google.com");
            Assert.AreEqual(rss.Channel.Items[0].Categories[1].Domain, "http://www.sun.com");
            Assert.AreEqual(rss.Channel.Items[0].Categories[0].Text, "GOOG");
            Assert.AreEqual(rss.Channel.Items[0].Categories[1].Text, "SUNW");
        }

        /// <summary>
        ///A test for Comments
        ///</summary>
        [TestMethod()]
        public void RssItemCommentsTest()
        {
            Assert.AreEqual("This feed is from Yahoo News", rss.Channel.Items[0].Comments, "RssToolkit.Rss.RssItem.Comments was not set correctly.");
        }

        /// <summary>
        ///A test for Description
        ///</summary>
        [TestMethod()]
        public void RssItemDescriptionTest()
        {
            Assert.AreEqual("This is a feed description", rss.Channel.Items[0].Description, "RssToolkit.Rss.RssItem.Description was not set correctly.");
        }

        /// <summary>
        ///A test for Enclosure
        ///</summary>
        [TestMethod()]
        public void RssItemEnclosureTest()
        {
            Assert.AreEqual("12216320", rss.Channel.Items[0].Enclosure.Length, "RssToolkit.Rss.RssEnclosure.Length was not set correctly.");
            Assert.AreEqual("audio/mpeg", rss.Channel.Items[0].Enclosure.Type, "RssToolkit.Rss.RssEnclosure.Type was not set correctly.");
            Assert.AreEqual("http://www.scripting.com/mp3s/weatherReportSuite.mp3", rss.Channel.Items[0].Enclosure.Url, "RssToolkit.Rss.RssEnclosure.Url was not set correctly.");
        }

        /// <summary>
        ///A test for Guid
        ///</summary>
        [TestMethod()]
        public void RssItemGuidTest()
        {
            Assert.AreEqual("false", rss.Channel.Items[0].Guid.IsPermaLink, "RssToolkit.Rss.RssGuid.IsPermaLink was not set correctly.");
            Assert.AreEqual("ap/20070214/bush", rss.Channel.Items[0].Guid.Text, "RssToolkit.Rss.RssGuid.Text was not set correctly.");
        }

        /// <summary>
        ///A test for Link
        ///</summary>
        [TestMethod()]
        public void RssItemLinkTest()
        {
            Assert.AreEqual("http://us.rd.yahoo.com/dailynews/rss/topstories/*http://news.yahoo.com/s/ap/20070214/ap_on_go_pr_wh/bush", rss.Channel.Items[0].Link, "RssToolkit.Rss.RssItem.Link was not set correctly.");
        }

        /// <summary>
        ///A test for PubDate
        ///</summary>
        [TestMethod()]
        public void RssItemPubDateTest()
        {
            Assert.AreEqual("Wed, 14 Feb 2007 23:05:49 GMT", rss.Channel.Items[0].PubDate, "RssToolkit.Rss.RssItem.PubDate was not set correctly.");
        }

        /// <summary>
        ///A test for Title
        ///</summary>
        [TestMethod()]
        public void RssItemTitleTest()
        {
            Assert.AreEqual("Bush: Iran is source of deadly weapons", rss.Channel.Items[0].Title, "RssToolkit.Rss.RssItem.Title was not set correctly.");
        }
    }
}
